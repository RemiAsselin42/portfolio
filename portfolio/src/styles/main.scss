@use "sass:color";
@use "sass:math";
@use "sass:list";
@use "variables" as *;
@use "mixins" as *;

:root {
  font-family: $font-family-base;
  line-height: 1.5;
  font-weight: 400;
  color-scheme: light dark;
  color: $text-light;
  background-color: $background-dark;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  --footer-height: 0px;
}

* {
  margin: 0;
  padding: 0;
  font-optical-sizing: auto;
}

html,
body {
  width: 100%;
  height: 100%;
  font-family: $font-family-base !important;
}

body {
  @include flex-column;
  min-width: 320px;
  min-height: 100vh;
}

#root {
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
}

.page-container {
  width: 100vw;
  height: 100vh;
  position: relative;
  perspective: 1000px;
  overflow: hidden;
}

// Define warm colors array
$warm-colors: (#ff6b6b, #f0a500, #ffa600, #ff9564, #ff5733);

// Function to get random warm color
@function random-warm-color() {
  @return nth($warm-colors, random(length($warm-colors)));
}

.bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-color: #1f1a1a;
}

.noise-filter {
  position: absolute;
  width: 0;
  height: 0;
}

.noise-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  mix-blend-mode: overlay;
  opacity: 0.7;
}

.shapes-container {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  filter: url(#blur);
  mix-blend-mode: screen;
  opacity: 0.2;

  .static-shape {
    background-color: #242424;
    width: 50vw;
    height: 70vh;
    position: relative;
    pointer-events: none;
    margin: 0 auto;
    top: 50%;
    transform: translateY(-50%);
    opacity: 0.9;
    z-index: 9999;
    border-radius: $border-radius-full;
  }

  .shape {
    position: absolute;
    pointer-events: none;
  }
}

.noise-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  filter: url(#noise);
  mix-blend-mode: overlay;
  pointer-events: none;
}

// État initial : hors écran à droite
.page-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  transform-style: preserve-3d;
  height: 100vh;
  max-width: 1500px;
  margin: 0 auto;
}

// Animations de transition droite vers gauche

.reset-position {
  transform: translateX(100%) scale(1.5) rotateY(-0.2turn);
  opacity: 0;
  transition: none;
}

.fade-in {
  transform: translateX(0) scale(1) rotateY(0deg);
  opacity: 1;
  transition: transform $transition-fade, opacity $transition-fade;
}

.fade-out {
  transform: translateX(-100%) scale(1.5) rotateY(0.2turn);
  opacity: 0;
  transition: transform $transition-fade, opacity $transition-fade;
}

// Animation de transition gauche vers droite

.left-reset-position {
  transform: translateX(-100%) scale(1.5) rotateY(0.2turn);
  opacity: 0;
  transition: none;
}

.left-fade-in {
  transform: translateX(0) scale(1) rotateY(0deg);
  opacity: 1;
  transition: transform $transition-fade, opacity $transition-fade;
}

.left-fade-out {
  transform: translateX(100%) scale(1.5) rotateY(-0.2turn);
  opacity: 0;
  transition: transform $transition-fade, opacity $transition-fade;
}

h1 {
  font-size: $font-size-xxl;
  line-height: 1.1;
}

button,
a {
  cursor: pointer;
}

.project-container,
.project-details-container {
  perspective: 1000px;
  border-radius: 30px;
  backdrop-filter: blur(10px);
  min-height: 86.5vh;
  overflow: auto;
  backface-visibility: hidden;
  will-change: transform;

  .project-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.5s;
    transform-style: preserve-3d;
  }

  &.flipped .project-inner {
    transform: rotateY(180deg);
  }

  .project-front,
  .project-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
  }

  .project-back {
    transform: rotateY(180deg);
  }

  transition: transform 0.5s;
  transform-style: preserve-3d;
  transform-origin: center center;

  &.flipping-out {
    animation: flip-out 0.5s forwards;
  }

  &.flipping-in {
    animation: flip-in 0.5s forwards;
  }
}

.project-flip-container {
  width: 100%;
  height: auto;
  margin: 0 auto;
  position: relative;
  perspective: 1000px;
}

@keyframes flip-out {
  0% {
    transform: rotateY(0deg);
    opacity: 1;
  }
  100% {
    transform: rotateY(90deg);
    opacity: 0;
  }
}

@keyframes flip-in {
  0% {
    transform: rotateY(-90deg);
    opacity: 0;
  }
  100% {
    transform: rotateY(0deg);
    opacity: 1;
  }
}
