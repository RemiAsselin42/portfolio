@use "sass:color";
@use "sass:math";
@use "sass:list";
@use "variables" as *;
@use "mixins" as *;

$breakpoint-xxs: 250px;
$breakpoint-xs: 320px;
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;
$breakpoint-xxl: 1400px;

$breakpoint-max-height: 800px;

@mixin respond-to($breakpoint) {
  @if $breakpoint == xxs {
    @media (max-width: #{$breakpoint-xs - 1}) {
      @content;
    }
  } @else if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) and (max-width: #{$breakpoint-md - 1}) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) and (max-width: #{$breakpoint-lg - 1}) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) and (max-width: #{$breakpoint-xl - 1}) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) and (max-width: #{$breakpoint-xxl - 1}) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (min-width: #{$breakpoint-xxl}) {
      @content;
    }
  } @else if $breakpoint == mobile {
    @media (max-width: #{$breakpoint-md - 1}) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media (min-width: #{$breakpoint-md}) and (max-width: #{$breakpoint-lg - 1}) {
      @content;
    }
  } @else if $breakpoint == desktop {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  } @else if $breakpoint == macbook {
    @media (max-height: #{$breakpoint-max-height - 1}) and (min-width: #{$breakpoint-md}) {
      @content;
    }
  } @else if $breakpoint == landscape {
    @media (orientation: landscape) and (max-height: #{$breakpoint-md - 1}) {
      @content;
    }
  } @else if $breakpoint == portrait {
    @media (orientation: portrait) {
      @content;
    }
  }
}

@include respond-to(mobile) {
  .project-layout {
    grid-template-columns: 1fr !important;
    max-width: 95vw !important;
  }

  .project-text {
    padding: 0 $spacing-base;
  }

  .modale-section-logos {
    flex-direction: column;
    align-items: center;

    .tech-icon-container {
      margin: $spacing-base 0;
    }
  }

  .project-video,
  .tiktok-embed-container {
    max-width: 100%;
    margin: 0 auto;
  }

  .project-dots-div {
    bottom: 10px;

    .project-dots {
      .dot {
        width: 8px;
        height: 8px;
        margin: 0 5px;
      }
    }
  }
}

@include respond-to(tablet) {
  .project-layout {
    grid-template-columns: 1fr !important;
    max-width: 95vw !important;
  }

  .project-text {
    padding: 0 $spacing-base;
  }

  .modale-section-logos {
    flex-direction: column;
    align-items: center;

    .tech-icon-container {
      margin: $spacing-base 0;
    }
  }

  .project-video,
  .tiktok-embed-container {
    max-width: 100%;
    margin: 0 auto;
  }

  .project-dots-div {
    bottom: 10px;

    .project-dots {
      .dot {
        width: 8px;
        height: 8px;
        margin: 0 5px;
      }
    }
  }
}

@include respond-to(landscape) {
  .project-layout {
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    padding: $spacing-base;

    .project-image,
    .project-text {
      width: 100%;
    }

    .project-title {
      font-size: $font-size-xl !important;
    }

    .project-description {
      font-size: $font-size-md !important;
    }
  }
}
